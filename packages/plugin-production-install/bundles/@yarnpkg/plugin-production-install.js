/* eslint-disable */
module.exports = {
name: "@yarnpkg/plugin-production-install",
factory: function (require) {
var plugin;plugin=(()=>{"use strict";var e={331:(e,t,r)=>{r.r(t),r.d(t,{default:()=>f});var o=r(688),s=r(966),i=r(594),a=r(318),n=r(42);async function c(e,t,r){return o.xfs.copyFilePromise(o.ppath.join(e,r),o.ppath.join(t,r))}async function p(e,t,r,s=[]){return async function e(t,r,s=[]){if(!(await o.xfs.lstatPromise(t)).isDirectory())throw new Error("src not a folder");{await o.xfs.existsPromise(r)||await o.xfs.mkdirpPromise(r);const i=await o.xfs.readdirPromise(t);for(const a of i){const i=o.ppath.join(t,a),n=o.ppath.join(r,a);(()=>{for(const e of s)if(i.endsWith(e))return!0;return!1})()||((await o.xfs.lstatPromise(i)).isDirectory()?await e(i,n,s):await o.xfs.copyFilePromise(i,n))}}}(o.ppath.join(e,r),o.ppath.join(t,r),s)}class l{constructor({multiFetcher:e,project:t,workspace:r,cache:o,outDirectoryPath:s,outConfiguration:i}){this.multiFetcher=e,this.project=t,this.workspace=r,this.cache=o,this.outDirectoryPath=s,this.outConfiguration=i}supports(e,t){return this.multiFetcher.supports(e,t)}getLocalPath(e,t){return e.reference.startsWith(s.WorkspaceResolver.protocol)&&e.reference!==s.WorkspaceResolver.protocol+"."?null:this.multiFetcher.getLocalPath(e,t)}async fetch(e,t){const r=t.checksums.get(e.locatorHash)||null;if(e.reference.startsWith(s.WorkspaceResolver.protocol)&&e.reference!==s.WorkspaceResolver.protocol+"."){const[o,i,a]=await t.cache.fetchPackageFromCache(e,r,{onHit:()=>t.report.reportCacheHit(e),onMiss:()=>t.report.reportCacheMiss(e,s.structUtils.prettyLocator(t.project.configuration,e)+" can't be found in the cache and will be packed from disk."),loader:async()=>this.packWorkspace(e,t),skipIntegrityCheck:t.skipIntegrityCheck});return{packageFs:o,releaseFs:i,prefixPath:s.structUtils.getIdentVendorPath(e),checksum:a}}if(e.reference.startsWith("npm:")){const i=this.cache.getLocatorPath(e,r),a=t.cache.getLocatorPath(e,r);if(i&&await o.xfs.existsPromise(i)&&a&&!await o.xfs.existsPromise(a))try{await o.xfs.linkPromise(i,a)}catch(e){await o.xfs.existsPromise(a)||t.report.reportError(s.MessageName.FETCH_FAILED,e)}}return this.multiFetcher.fetch(e,t)}async packWorkspace(e,{report:t}){const r=this.project.getWorkspaceByLocator(e);if(await a.packUtils.hasPackScripts(r))try{const e=await s.Cache.find(r.project.configuration,{immutable:!0,check:!1});await r.project.install({report:t,cache:e})}catch(e){await r.project.resolveEverything({lockfileOnly:!0,report:t})}let o;return await a.packUtils.prepareForPack(r,{report:t},async()=>{t.reportJson({base:r.cwd});const e=await a.packUtils.genPackList(r);for(const r of e)t.reportInfo(null,r),t.reportJson({location:r});const i=await a.packUtils.genPackStream(r,e);o=await s.miscUtils.bufferStream(i)}),await s.tgzUtils.convertToZip(o,{stripComponents:1,prefixPath:s.structUtils.getIdentVendorPath(e)})}}class u{constructor({resolver:e,project:t}){this.resolver=e,this.project=t}supportsDescriptor(e,t){return this.resolver.supportsDescriptor(e,t)}supportsLocator(e,t){return this.resolver.supportsLocator(e,t)}shouldPersistResolution(e,t){return!e.reference.startsWith(s.WorkspaceResolver.protocol)&&this.resolver.shouldPersistResolution(e,t)}bindDescriptor(e,t,r){return this.resolver.bindDescriptor(e,t,r)}getResolutionDependencies(e,t){return this.resolver.getResolutionDependencies(e,t)}async getCandidates(e,t,r){if(e.range.startsWith(s.WorkspaceResolver.protocol)&&e.range!==s.WorkspaceResolver.protocol+"."){return[this.project.getWorkspaceByDescriptor(e).anchoredLocator]}return this.resolver.getCandidates(e,t,r)}async resolve(e,t){if(e.reference.startsWith(s.WorkspaceResolver.protocol)&&e.reference!==s.WorkspaceResolver.protocol+"."){const t=this.project.getWorkspaceByLocator(e);return{...e,version:t.manifest.version||"0.0.0",languageName:"unknown",linkType:s.LinkType.SOFT,dependencies:new Map([...t.manifest.dependencies]),peerDependencies:new Map([...t.manifest.peerDependencies]),dependenciesMeta:t.manifest.dependenciesMeta,peerDependenciesMeta:t.manifest.peerDependenciesMeta,bin:t.manifest.bin}}return this.resolver.resolve(e,t)}async getSatisfying(e,t,r){return null}}var h=function(e,t,r,o){var s,i=arguments.length,a=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,o);else for(var n=e.length-1;n>=0;n--)(s=e[n])&&(a=(i<3?s(a):i>3?s(t,r,a):s(t,r))||a);return i>3&&a&&Object.defineProperty(t,r,a),a};class d extends n.Command{constructor(){super(...arguments),this.json=!1,this.silent=!1}async execute(){const e=await s.Configuration.find(this.context.cwd,this.context.plugins),{project:t,workspace:r}=await s.Project.find(e,this.context.cwd);if(!r)throw new i.WorkspaceRequiredError(t.cwd,this.context.cwd);const a=await s.Cache.find(e,{immutable:!0,check:!1}),n=t.topLevelWorkspace.cwd,h=o.ppath.isAbsolute(this.outDirectory)?this.outDirectory:o.ppath.join(r.cwd,this.outDirectory);return(await s.StreamReport.start({configuration:e,json:this.json,stdout:this.context.stdout,includeLogs:!0},async d=>{await d.startTimerPromise("Setting up production directory",async()=>{await o.xfs.mkdirpPromise(h),await c(n,h,e.get("lockfileFilename")),await c(n,h,e.get("rcFilename")),await c(r.cwd,h,(0,o.toFilename)("package.json"));const t=[],s=r=>{try{e.get(r)&&t.push(e.get(r))}catch(e){}};s("bstatePath"),s("installStatePath"),s("cacheFolder"),s("pnpUnpluggedFolder"),s("deferredVersionFolder"),await p(n,h,".yarn",t)}),await d.startTimerPromise("Modifying to contain only production dependencies",async()=>{const e=o.ppath.join(h,(0,o.toFilename)("package.json")),t=await o.xfs.readJsonPromise(e);t.devDependencies&&delete t.devDependencies,await o.xfs.writeJsonPromise(e,t)}),await d.startTimerPromise("Installing production version",async()=>{const o=await s.Configuration.find(h,this.context.plugins),{project:n,workspace:c}=await s.Project.find(o,h);if(!c)throw new i.WorkspaceRequiredError(t.cwd,this.context.cwd);const p=await s.Cache.find(o,{immutable:!1,check:!1}),f=e.makeFetcher(),m=e.makeResolver(),w=new u({project:t,resolver:m}),g=new l({cache:a,multiFetcher:f,workspace:r,project:t,outConfiguration:o,outDirectoryPath:h});await n.install({cache:p,report:d,immutable:!1,fetcher:g,resolver:w})})})).exitCode()}}d.usage=n.Command.Usage({description:"INSTALL!",details:"prod only install",examples:[["Install the project with only prod dependencies","$0 prod-install"]]}),h([n.Command.String()],d.prototype,"outDirectory",void 0),h([n.Command.Boolean("--json")],d.prototype,"json",void 0),h([n.Command.Boolean("--silent",{hidden:!0})],d.prototype,"silent",void 0),h([n.Command.Path("prod-install")],d.prototype,"execute",null);const f={commands:[d]}},594:e=>{e.exports=require("@yarnpkg/cli")},966:e=>{e.exports=require("@yarnpkg/core")},688:e=>{e.exports=require("@yarnpkg/fslib")},318:e=>{e.exports=require("@yarnpkg/plugin-pack")},42:e=>{e.exports=require("clipanion")}},t={};function r(o){if(t[o])return t[o].exports;var s=t[o]={exports:{}};return e[o](s,s.exports,r),s.exports}return r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r(331)})();
return plugin;
}
};